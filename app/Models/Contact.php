<?php

namespace App\Models;

use App\Models\Scopes\AllowedFilterSearch;
use App\Models\Scopes\AllowedSort;
use App\Models\Scopes\SimpleSoftDeletes;
use App\Models\Scopes\SimpleSoftDeleteScope;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent;

class Contact extends Model
{
    use HasFactory, SoftDeletes , AllowedSort , AllowedFilterSearch;
//    use HasFactory , SimpleSoftDeletes;
    protected $fillable = ['first_name','last_name','phone','email','address','company_id'];

    public  function company(){
        return $this->belongsTo(Company::class);
    }

    public function tasks(){
        return $this->hasMany(Task::class);
    }

//    public function scopeFilterByCompany(Eloquent\Builder $query , $key)
//    {
//        if ($companyId = request()->query($key)) {
//            $query->where($key, $companyId);
//        }
//        return $query;
//    }




//    public static function booted()
//    {
////        parent::booted(); // TODO: Change the autogenerated stub
//
//        static::addGlobalScope(new SimpleSoftDeleteScope());
//
////        static::addGlobalScope('softDeletes' , function (Builder $builder){
////            $builder->whereNull('deleted_at');
////        });
//    }
}
